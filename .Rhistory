glance(m_age_ss)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(broom)
claims <- read_csv("data/insurance_data.csv")
#view(claims)
glimpse(claims)
missing_data <- function(data, col){
data %>%
summarize(n_missing = sum(is.na({{col}})))
}
# Checking the distribution of continuous variables
hist_plot <- function(data, col){
data %>%
filter(!is.na({{col}})) %>%
ggplot(aes(x = .data[[col]])) +
geom_histogram(bins = 10) +
labs(x = col, y = "Frequency", title = "Distribution")
}
# Checking the distribution of categorical variables
bar_plot <- function(data, col){
data %>%
filter(!is.na({{col}})) %>%
count({{col}}) %>%
ggplot(aes(x = reorder({{col}}, -n), y = n)) +            # -n to arrange bars in descending order
geom_bar(stat = "identity") +
labs(x = NULL, y = "Count", title = "Distribution")
}
missing_data(claims, age)
hist_plot(claims, col = "age")
missing_data(claims, bmi)
hist_plot(claims, col = "bmi")
missing_data(claims, bloodpressure)
hist_plot(claims, col = "bloodpressure")
missing_data(claims, claim)
hist_plot(claims, col = "claim")
missing_data(claims, gender)
bar_plot(claims, gender)
missing_data(claims, diabetic)
bar_plot(claims, diabetic)
missing_data(claims, smoker)
bar_plot(claims, smoker)
missing_data(claims, region)
bar_plot(claims, region)
claims %>%
summarize(max = max(children))
claims <- claims %>%
mutate(children_cat = case_when(
children == 0 ~ "none",
children == 1 ~ "one",
children == 2 ~ "two",
children == 3 ~ "three",
children == 4 ~ "four",
TRUE ~ "five"
))
bar_plot(claims, children_cat)
claims <- claims %>%
mutate(weight_category = case_when(
bmi < 18.5 ~ "Underweight",
bmi < 25.0 ~ "Healthy weight",
bmi < 30.0 ~ "Overweight",
TRUE ~ "Obese"
))
bar_plot(claims, weight_category)
claims <- claims %>%
mutate(bp_category = case_when(
bloodpressure < 120 ~ "Normal",
bloodpressure < 130 ~ "Elevated",
bloodpressure < 140 ~ "Stage 1 Hypertension",
TRUE ~ "Stage 2 Hypertension"
))
bar_plot(claims, bp_category)
claims %>%
filter(!is.na(age)) %>%
summarize(min_age = min(age),
max_age = max(age))
claims <- claims %>%
filter(!is.na(age)) %>%
mutate(age_cat = case_when(
age < 25 ~ "18 - 24",
age < 35 ~ "25 - 34",
age < 45 ~ "35 - 44",
age < 55 ~ "45 - 54",
TRUE ~ "55 and over"
))
bar_plot(claims, age_cat)
claims <- claims %>%
mutate(diabetic = if_else(diabetic == "Yes", "Diabetic", "Non-diabetic")) %>%
mutate(smoker = if_else(smoker == "Yes", "Smoker", "Non-smoker"))
ggplot(claims, aes(x = bmi,
y = claim)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE, col ="red") +
labs(x = "BMI",
y = "Claim ($)",
title = "Distribution of Claim Amounts by BMI")
ggplot(claims, aes(x = claim,
y = weight_category,
fill = weight_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Weight Status") +
theme(legend.position = "none")
claims_wt <- claims %>%
filter(claim < 50000)
ggplot(claims_wt, aes(x = claim,
y = weight_category,
fill = weight_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Weight Status",
subtitle = "Visualization excludes claims greater than $50,000") +
theme(legend.position = "none")
ggplot(claims, aes(x = bloodpressure,
y = claim)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(x = "Blood Pressure",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Blood Pressure")
ggplot(claims, aes(x = claim,
y = bp_category,
fill = bp_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Blood Pressure Categories") +
theme(legend.position = "none")
claims_bp <- claims %>%
filter(bp_category == "Elevated" | bp_category == "Stage 1 Hypertension" | bp_category == "Stage 2 Hypertension")
ggplot(claims_bp, aes(x = claim,
y = bp_category,
fill = bp_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Blood Pressure Categories",
subtitle = "Visualization excludes the normal blood presssure category") +
theme(legend.position = "none")
claims %>%
count(bp_category)
ggplot(claims, aes(x = diabetic,
y = claim,
fill = diabetic)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Diabetic Status") +
theme(legend.position = "none")
ggplot(claims, aes(x = smoker,
y = claim,
fill = smoker)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Smoking Status") +
theme(legend.position = "none")
ggplot(claims, aes(x = age,
y = claim)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(x = "Age",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Age")
ggplot(claims, aes(x = age_cat,
y = claim,
fill = age_cat)) +
geom_boxplot() +
labs(x = "Age",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Age Groups") +
theme(legend.position = "none")
ggplot(claims, aes(x = gender,
y = claim,
fill = gender)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Gender") +
theme(legend.position = "none")
claims_gender <- claims %>%
filter(claim < 45000)
ggplot(claims_gender, aes(x = gender,
y = claim,
fill = gender)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Gender",
subtitle = "Visualization excludes claims greater than $45,000") +
theme(legend.position = "none")
claims %>%
filter(!is.na(region)) %>%
ggplot(aes(x = claim,
y = region,
fill = region)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Region") +
theme(legend.position = "none")
claims_region <- claims %>%
filter(!is.na(region),
claim < 45000)
ggplot(claims_region, aes(x = claim,
y = region,
fill = region)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Region",
subtitle = "Visualization excludes claims greater than $45,000") +
theme(legend.position = "none")
ggplot(claims, aes(x = children_cat,
y = claim,
fill = children_cat)) +
geom_boxplot() +
labs(x = "Number of children",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Number of Children") +
theme(legend.position = "none")
claims_children <- claims %>%
filter(claim < 45000) %>%
mutate(children_cat = fct_reorder(children_cat, children))
ggplot(claims_children, aes(x = children_cat,
y = claim,
fill = children_cat)) +
geom_boxplot() +
labs(x = "Number of children",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Number of Children",
subtitle = "Visualization excludes claims greater than $45,000") +
theme(legend.position = "none")
library(GGally)
claims %>%
select(claim, bloodpressure, bmi, age, gender, smoker, diabetic, children, region) %>%
ggpairs()
m_claim_full <- lm(claim ~ bloodpressure + bmi + age + gender + smoker + diabetic + children + region, data = claims)
tidy(m_claim_full)
glance(m_claim_full)
confint(m_claim_full)
selected_model <- step(m_claim_full, direction = "backward")
tidy(selected_model) %>% select(term, estimate, p.value)
glance(selected_model)
m_test <- lm(claim ~ bloodpressure + bmi + children + region, data = claims)
tidy(m_test)
glance(m_test)
df <- tidy(selected_model) %>%
select(term, p.value) %>%
ggplot(df, aes(x = reorder(p.value) +
geom_bar(stat = "identity") +
labs(x = NULL, y = "Count", title = "Distribution"))
df <- tidy(selected_model) %>%
select(term, p.value) %>%
ggplot(df, aes(x = reorder(term, p.value), y = p.value)) +
geom_bar(stat = "identity") +
labs(x = "Terms", y = "p values", title = "Distribution")
df <- tidy(selected_model) %>%
select(term, p.value)
ggplot(df, aes(x = reorder(term, p.value), y = p.value)) +
geom_bar(stat = "identity") +
labs(x = "Terms", y = "p values", title = "Distribution")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(broom)
claims <- read_csv("data/insurance_data.csv")
#view(claims)
glimpse(claims)
missing_data <- function(data, col){
data %>%
summarize(n_missing = sum(is.na({{col}})))
}
# Checking the distribution of continuous variables
hist_plot <- function(data, col){
data %>%
filter(!is.na({{col}})) %>%
ggplot(aes(x = .data[[col]])) +
geom_histogram(bins = 10) +
labs(x = col, y = "Frequency", title = "Distribution")
}
# Checking the distribution of categorical variables
bar_plot <- function(data, col){
data %>%
filter(!is.na({{col}})) %>%
count({{col}}) %>%
ggplot(aes(x = reorder({{col}}, -n), y = n)) +            # -n to arrange bars in descending order
geom_bar(stat = "identity") +
labs(x = NULL, y = "Count", title = "Distribution")
}
missing_data(claims, age)
hist_plot(claims, col = "age")
missing_data(claims, bmi)
hist_plot(claims, col = "bmi")
missing_data(claims, bloodpressure)
hist_plot(claims, col = "bloodpressure")
missing_data(claims, claim)
hist_plot(claims, col = "claim")
missing_data(claims, gender)
bar_plot(claims, gender)
missing_data(claims, diabetic)
bar_plot(claims, diabetic)
missing_data(claims, smoker)
bar_plot(claims, smoker)
missing_data(claims, region)
bar_plot(claims, region)
claims %>%
summarize(max = max(children))
claims <- claims %>%
mutate(children_cat = case_when(
children == 0 ~ "none",
children == 1 ~ "one",
children == 2 ~ "two",
children == 3 ~ "three",
children == 4 ~ "four",
TRUE ~ "five"
))
bar_plot(claims, children_cat)
claims <- claims %>%
mutate(weight_category = case_when(
bmi < 18.5 ~ "Underweight",
bmi < 25.0 ~ "Healthy weight",
bmi < 30.0 ~ "Overweight",
TRUE ~ "Obese"
))
bar_plot(claims, weight_category)
claims <- claims %>%
mutate(bp_category = case_when(
bloodpressure < 120 ~ "Normal",
bloodpressure < 130 ~ "Elevated",
bloodpressure < 140 ~ "Stage 1 Hypertension",
TRUE ~ "Stage 2 Hypertension"
))
bar_plot(claims, bp_category)
claims %>%
filter(!is.na(age)) %>%
summarize(min_age = min(age),
max_age = max(age))
claims <- claims %>%
filter(!is.na(age)) %>%
mutate(age_cat = case_when(
age < 25 ~ "18 - 24",
age < 35 ~ "25 - 34",
age < 45 ~ "35 - 44",
age < 55 ~ "45 - 54",
TRUE ~ "55 and over"
))
bar_plot(claims, age_cat)
claims <- claims %>%
mutate(diabetic = if_else(diabetic == "Yes", "Diabetic", "Non-diabetic")) %>%
mutate(smoker = if_else(smoker == "Yes", "Smoker", "Non-smoker"))
ggplot(claims, aes(x = bmi,
y = claim)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE, col ="red") +
labs(x = "BMI",
y = "Claim ($)",
title = "Distribution of Claim Amounts by BMI")
ggplot(claims, aes(x = claim,
y = weight_category,
fill = weight_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Weight Status") +
theme(legend.position = "none")
claims_wt <- claims %>%
filter(claim < 50000)
ggplot(claims_wt, aes(x = claim,
y = weight_category,
fill = weight_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Weight Status",
subtitle = "Visualization excludes claims greater than $50,000") +
theme(legend.position = "none")
ggplot(claims, aes(x = bloodpressure,
y = claim)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(x = "Blood Pressure",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Blood Pressure")
ggplot(claims, aes(x = claim,
y = bp_category,
fill = bp_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Blood Pressure Categories") +
theme(legend.position = "none")
claims_bp <- claims %>%
filter(bp_category == "Elevated" | bp_category == "Stage 1 Hypertension" | bp_category == "Stage 2 Hypertension")
ggplot(claims_bp, aes(x = claim,
y = bp_category,
fill = bp_category)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Blood Pressure Categories",
subtitle = "Visualization excludes the normal blood presssure category") +
theme(legend.position = "none")
claims %>%
count(bp_category)
ggplot(claims, aes(x = diabetic,
y = claim,
fill = diabetic)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Diabetic Status") +
theme(legend.position = "none")
ggplot(claims, aes(x = smoker,
y = claim,
fill = smoker)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Smoking Status") +
theme(legend.position = "none")
ggplot(claims, aes(x = age,
y = claim)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(x = "Age",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Age")
ggplot(claims, aes(x = age_cat,
y = claim,
fill = age_cat)) +
geom_boxplot() +
labs(x = "Age",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Age Groups") +
theme(legend.position = "none")
ggplot(claims, aes(x = gender,
y = claim,
fill = gender)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Gender") +
theme(legend.position = "none")
claims_gender <- claims %>%
filter(claim < 45000)
ggplot(claims_gender, aes(x = gender,
y = claim,
fill = gender)) +
geom_boxplot() +
labs(x = NULL,
y = "Claim ($)",
title = "Distribution of Claim Amounts by Gender",
subtitle = "Visualization excludes claims greater than $45,000") +
theme(legend.position = "none")
claims %>%
filter(!is.na(region)) %>%
ggplot(aes(x = claim,
y = region,
fill = region)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Region") +
theme(legend.position = "none")
claims_region <- claims %>%
filter(!is.na(region),
claim < 45000)
ggplot(claims_region, aes(x = claim,
y = region,
fill = region)) +
geom_boxplot() +
labs(x = "Claim ($)",
y = NULL,
title = "Distribution of Claim Amounts by Region",
subtitle = "Visualization excludes claims greater than $45,000") +
theme(legend.position = "none")
ggplot(claims, aes(x = children_cat,
y = claim,
fill = children_cat)) +
geom_boxplot() +
labs(x = "Number of children",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Number of Children") +
theme(legend.position = "none")
claims_children <- claims %>%
filter(claim < 45000) %>%
mutate(children_cat = fct_reorder(children_cat, children))
ggplot(claims_children, aes(x = children_cat,
y = claim,
fill = children_cat)) +
geom_boxplot() +
labs(x = "Number of children",
y = "Claim ($)",
title = "Distribution of Claim Amounts by Number of Children",
subtitle = "Visualization excludes claims greater than $45,000") +
theme(legend.position = "none")
library(GGally)
claims %>%
select(claim, bloodpressure, bmi, age, gender, smoker, diabetic, children, region) %>%
ggpairs()
m_claim_full <- lm(claim ~ bloodpressure + bmi + age + gender + smoker + diabetic + children + region, data = claims)
tidy(m_claim_full)
glance(m_claim_full)
confint(m_claim_full)
selected_model <- step(m_claim_full, direction = "backward")
tidy(selected_model) %>% select(term, estimate, p.value)
glance(selected_model)
m_test <- lm(claim ~ bloodpressure + bmi + children + region, data = claims)
tidy(m_test)
glance(m_test)
